C:\Users\rasek\AppData\Local\Programs\Python\Python39\python.exe "A:/Research Assistant/MNIST D/main.py"
2021-05-28 14:44:09.909565: W tensorflow/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'cudart64_110.dll'; dlerror: cudart64_110.dll not found
2021-05-28 14:44:09.909674: I tensorflow/stream_executor/cuda/cudart_stub.cc:29] Ignore above cudart dlerror if you do not have a GPU set up on your machine.
x_train shape: (60000, 28, 28, 1)
60000 train samples
10000 test samples
2021-05-28 14:44:11.697503: W tensorflow/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'nvcuda.dll'; dlerror: nvcuda.dll not found
2021-05-28 14:44:11.697604: W tensorflow/stream_executor/cuda/cuda_driver.cc:326] failed call to cuInit: UNKNOWN ERROR (303)
2021-05-28 14:44:11.699880: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:169] retrieving CUDA diagnostic information for host: DESKTOP-04NE6UJ
2021-05-28 14:44:11.699995: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:176] hostname: DESKTOP-04NE6UJ
2021-05-28 14:44:11.700313: I tensorflow/core/platform/cpu_feature_guard.cc:142] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX AVX2
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
WARNING:tensorflow:Please add `keras.layers.InputLayer` instead of `keras.Input` to Sequential model. `keras.Input` is intended to be used by Functional model.
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
conv2d (Conv2D)              (None, 28, 28, 32)        320       
_________________________________________________________________
dropout (Dropout)            (None, 28, 28, 32)        0         
_________________________________________________________________
max_pooling2d (MaxPooling2D) (None, 14, 14, 32)        0         
_________________________________________________________________
conv2d_1 (Conv2D)            (None, 14, 14, 64)        18496     
_________________________________________________________________
dropout_1 (Dropout)          (None, 14, 14, 64)        0         
_________________________________________________________________
max_pooling2d_1 (MaxPooling2 (None, 7, 7, 64)          0         
_________________________________________________________________
conv2d_2 (Conv2D)            (None, 7, 7, 64)          36928     
_________________________________________________________________
dropout_2 (Dropout)          (None, 7, 7, 64)          0         
_________________________________________________________________
max_pooling2d_2 (MaxPooling2 (None, 4, 4, 64)          0         
_________________________________________________________________
conv2d_3 (Conv2D)            (None, 4, 4, 64)          36928     
_________________________________________________________________
dropout_3 (Dropout)          (None, 4, 4, 64)          0         
_________________________________________________________________
max_pooling2d_3 (MaxPooling2 (None, 2, 2, 64)          0         
_________________________________________________________________
conv2d_4 (Conv2D)            (None, 2, 2, 64)          36928     
_________________________________________________________________
dropout_4 (Dropout)          (None, 2, 2, 64)          0         
_________________________________________________________________
max_pooling2d_4 (MaxPooling2 (None, 1, 1, 64)          0         
_________________________________________________________________
conv2d_5 (Conv2D)            (None, 1, 1, 64)          36928     
_________________________________________________________________
dropout_5 (Dropout)          (None, 1, 1, 64)          0         
_________________________________________________________________
max_pooling2d_5 (MaxPooling2 (None, 1, 1, 64)          0         
_________________________________________________________________
flatten (Flatten)            (None, 64)                0         
_________________________________________________________________
dropout_6 (Dropout)          (None, 64)                0         
_________________________________________________________________
dense (Dense)                (None, 10)                650       
=================================================================
Total params: 167,178
Trainable params: 167,178
Non-trainable params: 0
_________________________________________________________________
Epoch 1/15
2021-05-28 14:44:12.013449: I tensorflow/compiler/mlir/mlir_graph_optimization_pass.cc:176] None of the MLIR Optimization Passes are enabled (registered 2)
422/422 [==============================] - 29s 67ms/step - loss: 0.5048 - accuracy: 0.8328 - val_loss: 0.0928 - val_accuracy: 0.9767
Epoch 2/15
422/422 [==============================] - 28s 67ms/step - loss: 0.1240 - accuracy: 0.9651 - val_loss: 0.0509 - val_accuracy: 0.9862
Epoch 3/15
422/422 [==============================] - 28s 67ms/step - loss: 0.0884 - accuracy: 0.9761 - val_loss: 0.0457 - val_accuracy: 0.9890
Epoch 4/15
422/422 [==============================] - 28s 67ms/step - loss: 0.0651 - accuracy: 0.9821 - val_loss: 0.0425 - val_accuracy: 0.9880
Epoch 5/15
422/422 [==============================] - 28s 67ms/step - loss: 0.0572 - accuracy: 0.9843 - val_loss: 0.0528 - val_accuracy: 0.9857
Epoch 6/15
422/422 [==============================] - 28s 67ms/step - loss: 0.0499 - accuracy: 0.9865 - val_loss: 0.0289 - val_accuracy: 0.9917
Epoch 7/15
422/422 [==============================] - 28s 67ms/step - loss: 0.0445 - accuracy: 0.9876 - val_loss: 0.0310 - val_accuracy: 0.9910
Epoch 8/15
422/422 [==============================] - 28s 67ms/step - loss: 0.0375 - accuracy: 0.9897 - val_loss: 0.0284 - val_accuracy: 0.9913
Epoch 9/15
422/422 [==============================] - 29s 68ms/step - loss: 0.0354 - accuracy: 0.9900 - val_loss: 0.0283 - val_accuracy: 0.9922
Epoch 10/15
422/422 [==============================] - 28s 67ms/step - loss: 0.0338 - accuracy: 0.9904 - val_loss: 0.0304 - val_accuracy: 0.9918
Epoch 11/15
422/422 [==============================] - 28s 67ms/step - loss: 0.0307 - accuracy: 0.9914 - val_loss: 0.0295 - val_accuracy: 0.9922
Epoch 12/15
422/422 [==============================] - 28s 67ms/step - loss: 0.0274 - accuracy: 0.9929 - val_loss: 0.0284 - val_accuracy: 0.9923
Epoch 13/15
422/422 [==============================] - 28s 67ms/step - loss: 0.0269 - accuracy: 0.9921 - val_loss: 0.0229 - val_accuracy: 0.9930
Epoch 14/15
422/422 [==============================] - 28s 67ms/step - loss: 0.0233 - accuracy: 0.9931 - val_loss: 0.0260 - val_accuracy: 0.9925
Epoch 15/15
422/422 [==============================] - 29s 68ms/step - loss: 0.0230 - accuracy: 0.9936 - val_loss: 0.0265 - val_accuracy: 0.9920
Test loss: 0.024863464757800102
Test accuracy: 0.9919999837875366

Process finished with exit code 0
-------------------------------------------------------------------------------------------------------------------------

model = keras.Sequential(
    [
        keras.Input(shape=input_shape),

        layers.Conv2D(32, kernel_size=(3, 3), activation="relu", padding='same'),
        layers.Dropout(0.1),
        layers.MaxPooling2D(pool_size=(2, 2), padding='same'),


        layers.Conv2D(64, kernel_size=(3, 3), activation="relu", padding='same'),
        layers.Dropout(0.2),
        layers.MaxPooling2D(pool_size=(2, 2), padding='same'),


        layers.Conv2D(64, kernel_size=(3, 3), activation="relu", padding='same'),
        layers.Dropout(0.1),
        layers.MaxPooling2D(pool_size=(2, 2), padding='same'),


        layers.Conv2D(64, kernel_size=(3, 3), activation="relu", padding='same'),
        layers.Dropout(0.1),
        layers.MaxPooling2D(pool_size=(2, 2), padding='same'),

        layers.Conv2D(64, kernel_size=(3, 3), activation="relu", padding='same'),
        layers.Dropout(0.1),
        layers.MaxPooling2D(pool_size=(2, 2), padding='same'),

        layers.Conv2D(64, kernel_size=(3, 3), activation="relu", padding='same'),
        layers.Dropout(0.1),
        layers.MaxPooling2D(pool_size=(2, 2), padding='same'),

        layers.Flatten(),
        layers.Dropout(0.3),
        layers.Dense(num_classes, activation="softmax"),
    ]
)
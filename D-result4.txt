C:\Users\rasek\AppData\Local\Programs\Python\Python39\python.exe "A:/Research Assistant/MNIST D/main.py"
2021-05-28 14:54:10.597469: W tensorflow/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'cudart64_110.dll'; dlerror: cudart64_110.dll not found
2021-05-28 14:54:10.597578: I tensorflow/stream_executor/cuda/cudart_stub.cc:29] Ignore above cudart dlerror if you do not have a GPU set up on your machine.
x_train shape: (60000, 28, 28, 1)
60000 train samples
10000 test samples
2021-05-28 14:54:12.405097: W tensorflow/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'nvcuda.dll'; dlerror: nvcuda.dll not found
2021-05-28 14:54:12.405195: W tensorflow/stream_executor/cuda/cuda_driver.cc:326] failed call to cuInit: UNKNOWN ERROR (303)
2021-05-28 14:54:12.407485: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:169] retrieving CUDA diagnostic information for host: DESKTOP-04NE6UJ
2021-05-28 14:54:12.407610: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:176] hostname: DESKTOP-04NE6UJ
2021-05-28 14:54:12.408015: I tensorflow/core/platform/cpu_feature_guard.cc:142] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX AVX2
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
WARNING:tensorflow:Please add `keras.layers.InputLayer` instead of `keras.Input` to Sequential model. `keras.Input` is intended to be used by Functional model.
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
conv2d (Conv2D)              (None, 28, 28, 32)        320       
_________________________________________________________________
dropout (Dropout)            (None, 28, 28, 32)        0         
_________________________________________________________________
max_pooling2d (MaxPooling2D) (None, 14, 14, 32)        0         
_________________________________________________________________
conv2d_1 (Conv2D)            (None, 14, 14, 64)        18496     
_________________________________________________________________
dropout_1 (Dropout)          (None, 14, 14, 64)        0         
_________________________________________________________________
max_pooling2d_1 (MaxPooling2 (None, 7, 7, 64)          0         
_________________________________________________________________
conv2d_2 (Conv2D)            (None, 7, 7, 64)          36928     
_________________________________________________________________
dropout_2 (Dropout)          (None, 7, 7, 64)          0         
_________________________________________________________________
max_pooling2d_2 (MaxPooling2 (None, 4, 4, 64)          0         
_________________________________________________________________
conv2d_3 (Conv2D)            (None, 4, 4, 64)          36928     
_________________________________________________________________
dropout_3 (Dropout)          (None, 4, 4, 64)          0         
_________________________________________________________________
max_pooling2d_3 (MaxPooling2 (None, 2, 2, 64)          0         
_________________________________________________________________
conv2d_4 (Conv2D)            (None, 2, 2, 64)          36928     
_________________________________________________________________
dropout_4 (Dropout)          (None, 2, 2, 64)          0         
_________________________________________________________________
max_pooling2d_4 (MaxPooling2 (None, 1, 1, 64)          0         
_________________________________________________________________
conv2d_5 (Conv2D)            (None, 1, 1, 64)          36928     
_________________________________________________________________
dropout_5 (Dropout)          (None, 1, 1, 64)          0         
_________________________________________________________________
max_pooling2d_5 (MaxPooling2 (None, 1, 1, 64)          0         
_________________________________________________________________
flatten (Flatten)            (None, 64)                0         
_________________________________________________________________
dropout_6 (Dropout)          (None, 64)                0         
_________________________________________________________________
dense (Dense)                (None, 10)                650       
=================================================================
Total params: 167,178
Trainable params: 167,178
Non-trainable params: 0
_________________________________________________________________
Epoch 1/20
2021-05-28 14:54:12.735112: I tensorflow/compiler/mlir/mlir_graph_optimization_pass.cc:176] None of the MLIR Optimization Passes are enabled (registered 2)
422/422 [==============================] - 28s 66ms/step - loss: 0.5490 - accuracy: 0.8191 - val_loss: 0.1101 - val_accuracy: 0.9742
Epoch 2/20
422/422 [==============================] - 28s 66ms/step - loss: 0.1466 - accuracy: 0.9613 - val_loss: 0.0647 - val_accuracy: 0.9823
Epoch 3/20
422/422 [==============================] - 28s 66ms/step - loss: 0.1037 - accuracy: 0.9724 - val_loss: 0.0596 - val_accuracy: 0.9850
Epoch 4/20
422/422 [==============================] - 28s 66ms/step - loss: 0.0834 - accuracy: 0.9788 - val_loss: 0.0492 - val_accuracy: 0.9888
Epoch 5/20
422/422 [==============================] - 29s 68ms/step - loss: 0.0716 - accuracy: 0.9817 - val_loss: 0.0353 - val_accuracy: 0.9908
Epoch 6/20
422/422 [==============================] - 29s 69ms/step - loss: 0.0600 - accuracy: 0.9846 - val_loss: 0.0421 - val_accuracy: 0.9910
Epoch 7/20
422/422 [==============================] - 28s 67ms/step - loss: 0.0545 - accuracy: 0.9861 - val_loss: 0.0305 - val_accuracy: 0.9925
Epoch 8/20
422/422 [==============================] - 28s 67ms/step - loss: 0.0468 - accuracy: 0.9876 - val_loss: 0.0347 - val_accuracy: 0.9915
Epoch 9/20
422/422 [==============================] - 28s 67ms/step - loss: 0.0445 - accuracy: 0.9883 - val_loss: 0.0312 - val_accuracy: 0.9913
Epoch 10/20
422/422 [==============================] - 28s 67ms/step - loss: 0.0396 - accuracy: 0.9897 - val_loss: 0.0272 - val_accuracy: 0.9928
Epoch 11/20
422/422 [==============================] - 28s 67ms/step - loss: 0.0369 - accuracy: 0.9900 - val_loss: 0.0376 - val_accuracy: 0.9895
Epoch 12/20
422/422 [==============================] - 28s 67ms/step - loss: 0.0348 - accuracy: 0.9903 - val_loss: 0.0229 - val_accuracy: 0.9933
Epoch 13/20
422/422 [==============================] - 28s 67ms/step - loss: 0.0332 - accuracy: 0.9911 - val_loss: 0.0241 - val_accuracy: 0.9932
Epoch 14/20
422/422 [==============================] - 28s 67ms/step - loss: 0.0324 - accuracy: 0.9917 - val_loss: 0.0433 - val_accuracy: 0.9895
Epoch 15/20
422/422 [==============================] - 29s 68ms/step - loss: 0.0305 - accuracy: 0.9913 - val_loss: 0.0266 - val_accuracy: 0.9932
Epoch 16/20
422/422 [==============================] - 28s 67ms/step - loss: 0.0271 - accuracy: 0.9927 - val_loss: 0.0228 - val_accuracy: 0.9947
Epoch 17/20
422/422 [==============================] - 28s 67ms/step - loss: 0.0273 - accuracy: 0.9929 - val_loss: 0.0275 - val_accuracy: 0.9927
Epoch 18/20
422/422 [==============================] - 28s 67ms/step - loss: 0.0257 - accuracy: 0.9931 - val_loss: 0.0260 - val_accuracy: 0.9922
Epoch 19/20
422/422 [==============================] - 28s 67ms/step - loss: 0.0247 - accuracy: 0.9933 - val_loss: 0.0253 - val_accuracy: 0.9925
Epoch 20/20
422/422 [==============================] - 28s 67ms/step - loss: 0.0242 - accuracy: 0.9938 - val_loss: 0.0258 - val_accuracy: 0.9937
Test loss: 0.020328041166067123
Test accuracy: 0.9943000078201294

Process finished with exit code 0
-----------------------------------------------------------------------------------------------------
model = keras.Sequential(
    [
        keras.Input(shape=input_shape),

        layers.Conv2D(32, kernel_size=(3, 3), activation="relu", padding='same'),
        layers.Dropout(0.15),
        layers.MaxPooling2D(pool_size=(2, 2), padding='same'),


        layers.Conv2D(64, kernel_size=(3, 3), activation="relu", padding='same'),
        layers.Dropout(0.25),
        layers.MaxPooling2D(pool_size=(2, 2), padding='same'),


        layers.Conv2D(64, kernel_size=(3, 3), activation="relu", padding='same'),
        layers.Dropout(0.15),
        layers.MaxPooling2D(pool_size=(2, 2), padding='same'),


        layers.Conv2D(64, kernel_size=(3, 3), activation="relu", padding='same'),
        layers.Dropout(0.15),
        layers.MaxPooling2D(pool_size=(2, 2), padding='same'),

        layers.Conv2D(64, kernel_size=(3, 3), activation="relu", padding='same'),
        layers.Dropout(0.15),
        layers.MaxPooling2D(pool_size=(2, 2), padding='same'),

        layers.Conv2D(64, kernel_size=(3, 3), activation="relu", padding='same'),
        layers.Dropout(0.15),
        layers.MaxPooling2D(pool_size=(2, 2), padding='same'),

        layers.Flatten(),
        layers.Dropout(0.35),
        layers.Dense(num_classes, activation="softmax"),
    ]
)